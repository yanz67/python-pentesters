#!/usr/bin/env python3

from scapy.layers.inet import TCP, sr1, IP
from multiprocessing import Process, Queue
import queue as task_queue


def scan_port(host, port):
    print(f'scanning host: {host} port: {port}')
    response = sr1(IP(dst=host) / TCP(dport=port, flags="S"), verbose=False, timeout=.2)

    if response:
        if response[TCP].flags == 18:
            print(f'PORT: {port} is open')


def worker_process(host_ip, q):
    print(f'empty: {q.empty()}')
    while True:
        try:
            port = q.get(block=False)
        except task_queue.Empty:
            print("worker exiting")
            return 0
        scan_port(host_ip, port)


que = Queue()

for j in range(7999, 8001):
    que.put(j)

for i in range(1, 10):
    print(f'Creating worker: {i}')
    worker = Process(target=worker_process('127.0.0.1', que))
    worker.start()
