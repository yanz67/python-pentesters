#!/usr/bin/env python3

from scapy.layers.inet import IP, TCP, sr1
import threading
import queue


def scan_port(host_ip, host_port):
    synac_kpkt = sr1(IP(dst=host_ip) / TCP(dport=host_port, flags="S"), verbose=False, timeout=.2)

    if synac_kpkt:
        if synac_kpkt[TCP].flags == 18:
            print(f'Port {host_port} is open')
            synac_kpkt.show()


class WorkerThread(threading.Thread):
    def __init__(self, scan_queue):
        threading.Thread.__init__(self)
        self.queue = scan_queue

    def run(self):
        while True:
            job_to_scan = self.queue.get()
            print(f'Scanning IP: {job_to_scan["ip"]} port: {job_to_scan["port"]}')
            scan_port(job_to_scan['ip'], job_to_scan['port'])
            self.queue.task_done()


ip = '127.0.0.1'
print(f'scanning host: {ip}')

scan_queue = queue.Queue()

for i in range(10):
    worker = WorkerThread(scan_queue)
    worker.setDaemon(True)
    worker.start()

for port in range(7999, 8081):
    scan_queue.put({'ip': ip, 'port': port})

scan_queue.join()
