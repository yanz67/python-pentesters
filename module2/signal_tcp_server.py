#!/usr/bin/env python3

import signal
import sys
import socket
import threading


def sig_alarm_handler(signal, frame):
    print("Received an alarm ...Shutting Down ...")
    sys.exit(0)


def process_tcp_worker(tcp_client_socket, tcp_address):
    print(f'Received connection: {tcp_client_socket} === {tcp_address}')


signal.signal(signal.SIGALRM, sig_alarm_handler)
seconds_to_shutdown = int(sys.argv[1])
print(seconds_to_shutdown)
signal.alarm(seconds_to_shutdown)

print("opening tcp listener")

server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# bind the socket to a public host, and a well-known port
server_socket.bind(('127.0.0.1', 8000))
# become a server socket
server_socket.listen(5)  # max (5) connection requests

while True:
    (client_socket, address) = server_socket.accept()
    ct = threading.Thread(target=process_tcp_worker(client_socket, address))
    ct.setDaemon(True)
    ct.start()
